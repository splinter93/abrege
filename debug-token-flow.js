#!/usr/bin/env node

/**
 * Script de debug pour tracer le flux complet du token d'authentification
 * quand un agent appelle un autre agent via executeAgent
 */

console.log('üîç DEBUG: Trac√© du flux de token d\'authentification\n');

console.log('üìã FLUX COMPLET:');
console.log('1. Agent A fait un tool call "executeAgent"');
console.log('2. ToolCallManager.executeToolCall() re√ßoit le userToken de l\'utilisateur final');
console.log('3. ApiV2ToolExecutor.executeToolCall() re√ßoit le userToken');
console.log('4. ApiV2HttpClient.executeAgent() re√ßoit le userToken');
console.log('5. ApiV2HttpClient.makeRequest() d√©tecte si c\'est un userId ou un token JWT');
console.log('6. Si userId: utilise X-User-Id + X-Service-Role');
console.log('7. Si token JWT: utilise Authorization Bearer');
console.log('8. L\'endpoint /api/v2/agents/execute re√ßoit la requ√™te');
console.log('9. getAuthenticatedUser() traite l\'authentification');
console.log('10. L\'agent appel√© re√ßoit le token de l\'utilisateur final');
console.log('11. L\'agent appel√© fait ses tool calls avec le bon token');

console.log('\nüîß POINTS DE V√âRIFICATION:');
console.log('- Le userToken est-il bien pass√© dans toute la cha√Æne ?');
console.log('- L\'ApiV2HttpClient d√©tecte-t-il correctement userId vs token JWT ?');
console.log('- Les headers X-User-Id et X-Service-Role sont-ils bien envoy√©s ?');
console.log('- getAuthenticatedUser() g√®re-t-il bien l\'impersonation ?');
console.log('- L\'agent appel√© re√ßoit-il le bon token pour ses tool calls ?');

console.log('\nüß™ TEST SIMUL√â:');
console.log('Simulation d\'un appel executeAgent avec userId...');

// Simulation des headers qui seraient envoy√©s
const simulatedHeaders = {
  'Content-Type': 'application/json',
  'X-Client-Type': 'agent',
  'X-User-Id': '12345678-1234-1234-1234-123456789012',
  'X-Service-Role': 'true'
};

console.log('\nüì§ Headers simul√©s:');
console.log(JSON.stringify(simulatedHeaders, null, 2));

console.log('\n‚úÖ V√©rification des headers:');
console.log(`- X-User-Id pr√©sent: ${!!simulatedHeaders['X-User-Id']}`);
console.log(`- X-Service-Role pr√©sent: ${!!simulatedHeaders['X-Service-Role']}`);
console.log(`- X-Client-Type: ${simulatedHeaders['X-Client-Type']}`);

console.log('\nüîç PROCHAINES √âTAPES:');
console.log('1. V√©rifier les logs de l\'ApiV2HttpClient');
console.log('2. V√©rifier les logs de getAuthenticatedUser');
console.log('3. Tester avec un vrai appel API');
console.log('4. Ajouter des logs de debug suppl√©mentaires si n√©cessaire');
