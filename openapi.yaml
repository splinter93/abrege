openapi: 3.0.3
info:
  title: Abrège API - LLM-Friendly
  description: API pour la gestion de notes, dossiers et classeurs avec support des slugs et noms LLM-friendly
  version: 1.0.0
  contact:
    name: Support Abrège
    email: support@abrege.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.abrege.com/api/v1
    description: Production
  - url: http://localhost:3000/api/v1
    description: Développement

security:
  - BearerAuth: []

paths:
  /note/{ref}:
    get:
      summary: Récupérer une note
      description: Récupère une note par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
          example: "ma-premiere-note"
      responses:
        '200':
          description: Note récupérée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Mettre à jour une note
      description: Met à jour une note par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        '200':
          description: Note mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note non trouvée
        '422':
          description: Erreur de validation
    
    delete:
      summary: Supprimer une note
      description: Supprime une note par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      responses:
        '200':
          description: Note supprimée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Note supprimée"
        '404':
          description: Note non trouvée

  /note/create:
    post:
      summary: Créer une note
      description: Crée une nouvelle note avec génération automatique de slug
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteCreate'
      responses:
        '201':
          description: Note créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '422':
          description: Erreur de validation

  /note/overwrite:
    post:
      summary: Écraser complètement une note
      description: Met à jour complètement une note (remplace tout le contenu)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteOverwrite'
      responses:
        '200':
          description: Note mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note non trouvée
        '422':
          description: Erreur de validation

  /note/{ref}/add-content:
    patch:
      summary: Ajouter du contenu à une note
      description: Ajoute du contenu à la fin d'une note (append-only)
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Texte à ajouter
                  example: "\n## Nouveau contenu ajouté"
                position:
                  type: integer
                  description: Position d'insertion (optionnel)
                  example: 150
              required:
                - text
      responses:
        '200':
          description: Contenu ajouté avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note non trouvée

  /note/{ref}/add-to-section:
    patch:
      summary: Ajouter du contenu à une section
      description: Ajoute du contenu à une section spécifique d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                section:
                  type: string
                  description: Nom ou slug de la section
                  example: "introduction"
                text:
                  type: string
                  description: Texte à ajouter
                  example: "\nNouveau contenu dans la section"
                position:
                  type: integer
                  description: Position d'insertion (optionnel)
              required:
                - section
                - text
      responses:
        '200':
          description: Contenu ajouté à la section avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note ou section non trouvée

  /note/{ref}/clear-section:
    patch:
      summary: Effacer une section
      description: Efface le contenu d'une section spécifique d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                section:
                  type: string
                  description: Nom ou slug de la section
                  example: "introduction"
              required:
                - section
      responses:
        '200':
          description: Section effacée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note ou section non trouvée

  /note/{ref}/table-of-contents:
    get:
      summary: Récupérer la table des matières
      description: Récupère la table des matières d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      responses:
        '200':
          description: Table des matières récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  toc:
                    type: array
                    items:
                      $ref: '#/components/schemas/TOCItem'
        '404':
          description: Note non trouvée

  /note/{ref}/information:
    get:
      summary: Récupérer les informations de base
      description: Récupère les informations de base d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      responses:
        '200':
          description: Informations récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/NoteInfo'
        '404':
          description: Note non trouvée
    
    patch:
      summary: Mettre à jour les informations
      description: Met à jour les informations de base d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source_title:
                  type: string
                  description: Nouveau titre
                header_image:
                  type: string
                  description: Nouvelle image d'en-tête
      responses:
        '200':
          description: Informations mises à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Note non trouvée

  /note/{ref}/statistics:
    get:
      summary: Récupérer les statistiques
      description: Récupère les statistiques détaillées d'une note
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug de la note
          schema:
            type: string
      responses:
        '200':
          description: Statistiques récupérées avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteStatistics'
        '404':
          description: Note non trouvée

  /folder/{ref}:
    get:
      summary: Récupérer un dossier
      description: Récupère un dossier par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du dossier
          schema:
            type: string
      responses:
        '200':
          description: Dossier récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponse'
        '404':
          description: Dossier non trouvé
    
    put:
      summary: Mettre à jour un dossier
      description: Met à jour un dossier par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du dossier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nouveau nom du dossier
                  example: "Nouveau nom"
              required:
                - name
      responses:
        '200':
          description: Dossier mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponse'
        '404':
          description: Dossier non trouvé
    
    delete:
      summary: Supprimer un dossier
      description: Supprime un dossier par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du dossier
          schema:
            type: string
      responses:
        '200':
          description: Dossier supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Dossier non trouvé

  /folder/create:
    post:
      summary: Créer un dossier
      description: Crée un nouveau dossier avec génération automatique de slug
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderCreate'
      responses:
        '201':
          description: Dossier créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponse'
        '422':
          description: Erreur de validation

  /notebook/{ref}:
    get:
      summary: Récupérer un classeur
      description: Récupère un classeur par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du classeur
          schema:
            type: string
      responses:
        '200':
          description: Classeur récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
        '404':
          description: Classeur non trouvé
    
    put:
      summary: Mettre à jour un classeur
      description: Met à jour un classeur par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du classeur
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotebookUpdate'
      responses:
        '200':
          description: Classeur mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
        '404':
          description: Classeur non trouvé
    
    delete:
      summary: Supprimer un classeur
      description: Supprime un classeur par ID ou slug
      parameters:
        - name: ref
          in: path
          required: true
          description: ID ou slug du classeur
          schema:
            type: string
      responses:
        '200':
          description: Classeur supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '404':
          description: Classeur non trouvé

  /notebook/create:
    post:
      summary: Créer un classeur
      description: Crée un nouveau classeur avec génération automatique de slug
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotebookCreate'
      responses:
        '201':
          description: Classeur créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
        '422':
          description: Erreur de validation

  /slug/generate:
    post:
      summary: Générer un slug
      description: Génère un slug unique pour un titre donné
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Titre pour lequel générer le slug
                  example: "Mon titre avec caractères spéciaux: éàç!"
                type:
                  type: string
                  enum: [note, folder, classeur]
                  description: Type de ressource
                  example: "note"
                userId:
                  type: string
                  description: ID de l'utilisateur
                  example: "3223651c-5580-4471-affb-b3f4456bd729"
              required:
                - title
                - type
                - userId
      responses:
        '200':
          description: Slug généré avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  slug:
                    type: string
                    example: "mon-titre-avec-caracteres-speciaux-eac"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    NoteResponse:
      type: object
      properties:
        note:
          type: object
          properties:
            id:
              type: string
              format: uuid
            slug:
              type: string
            source_title:
              type: string
            markdown_content:
              type: string
            html_content:
              type: string
            header_image:
              type: string
              nullable: true
            folder_id:
              type: string
              format: uuid
              nullable: true
            classeur_id:
              type: string
              format: uuid
              nullable: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            position:
              type: integer

    NoteCreate:
      type: object
      properties:
        source_title:
          type: string
          description: Titre de la note
        markdown_content:
          type: string
          description: Contenu markdown de la note
        header_image:
          type: string
          description: URL de l'image d'en-tête
        folder_id:
          type: string
          format: uuid
          description: ID du dossier parent
        classeur_id:
          type: string
          format: uuid
          description: ID du classeur parent
      required:
        - source_title
        - markdown_content

    NoteUpdate:
      type: object
      properties:
        source_title:
          type: string
          description: Nouveau titre
        markdown_content:
          type: string
          description: Nouveau contenu markdown
        header_image:
          type: string
          description: Nouvelle image d'en-tête
      required:
        - source_title
        - markdown_content

    NoteOverwrite:
      type: object
      properties:
        note_id:
          type: string
          format: uuid
          description: ID de la note à écraser
        source_title:
          type: string
          description: Nouveau titre
        markdown_content:
          type: string
          description: Nouveau contenu markdown
        header_image:
          type: string
          description: Nouvelle image d'en-tête
      required:
        - note_id
        - source_title
        - markdown_content

    NoteInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        source_title:
          type: string
        header_image:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        folder_id:
          type: string
          format: uuid
          nullable: true
        classeur_id:
          type: string
          format: uuid
          nullable: true
        slug:
          type: string

    NoteStatistics:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        header_image:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        word_count:
          type: integer
          description: Nombre de mots
        char_count:
          type: integer
          description: Nombre de caractères
        section_count:
          type: integer
          description: Nombre de sections
        toc:
          type: array
          items:
            $ref: '#/components/schemas/TOCItem'

    TOCItem:
      type: object
      properties:
        level:
          type: integer
          description: Niveau du titre (1-6)
        title:
          type: string
          description: Titre de la section
        slug:
          type: string
          description: Slug de la section
        line:
          type: integer
          description: Numéro de ligne (1-based)
        start:
          type: integer
          description: Position de début dans la ligne

    FolderResponse:
      type: object
      properties:
        folder:
          type: object
          properties:
            id:
              type: string
              format: uuid
            slug:
              type: string
            name:
              type: string
            classeur_id:
              type: string
              format: uuid
            parent_id:
              type: string
              format: uuid
              nullable: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            position:
              type: integer

    FolderCreate:
      type: object
      properties:
        name:
          type: string
          description: Nom du dossier
        classeur_id:
          type: string
          format: uuid
          description: ID du classeur parent
        parent_id:
          type: string
          format: uuid
          description: ID du dossier parent (optionnel)
      required:
        - name
        - classeur_id

    NotebookResponse:
      type: object
      properties:
        notebook:
          type: object
          properties:
            id:
              type: string
              format: uuid
            slug:
              type: string
            name:
              type: string
            emoji:
              type: string
              nullable: true
            color:
              type: string
              nullable: true
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            position:
              type: integer

    NotebookCreate:
      type: object
      properties:
        name:
          type: string
          description: Nom du classeur
        emoji:
          type: string
          description: Emoji du classeur
        color:
          type: string
          description: Couleur du classeur
      required:
        - name

    NotebookUpdate:
      type: object
      properties:
        name:
          type: string
          description: Nouveau nom
        emoji:
          type: string
          description: Nouvel emoji
        color:
          type: string
          description: Nouvelle couleur
      required:
        - name

    Error:
      type: object
      properties:
        error:
          type: string
          description: Message d'erreur
        details:
          type: array
          items:
            type: string
          description: Détails de l'erreur (optionnel) 