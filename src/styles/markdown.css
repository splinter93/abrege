/*
  ===============================
  STYLES MARKDOWN UNIFIÉS - VERSION ULTRA CLEAN
  ===============================
  À appliquer sur tous les containers markdown (éditeur, preview, résumé, etc.)
  Utiliser la classe racine : .markdown-body
  HARMONISÉ AVEC LE SYSTÈME TYPOGRAPHIQUE CENTRALISÉ (typography.css)
*/

/* ==========================================================================
   BASE STYLES - UTILISE LES VARIABLES DE TYPOGRAPHY.CSS
   ========================================================================== */

.markdown-body {
  color: var(--editor-text-color);
  font-family: var(--editor-font-family);
  font-size: var(--editor-body-size);
  line-height: var(--editor-line-height-base);
  background: none;
  margin: 0;
  padding: 0;
  font-feature-settings: "kern" 1, "liga" 1, "calt" 1; /* premium typography features */
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Headings tighten following paragraph spacing - premium */
.markdown-body h1 + p,
.markdown-body h2 + p,
.markdown-body h3 + p {
  margin-top: 0; /* No extra space needed, heading margin-bottom is enough */
}

/* Paragraphs: left-aligned for optimal readability - premium */
.markdown-body p {
  margin: 0 0 var(--editor-paragraph-margin-bottom) 0;
  line-height: var(--editor-line-height-base);
  text-align: left; /* left-aligned is better for on-screen reading */
  hyphens: auto; /* premium: automatic hyphenation */
}

.markdown-body p:last-child {
  margin-bottom: 0; /* No margin for the very last paragraph */
}

/* Lists: consistent vertical rhythm - premium */
.markdown-body ul,
.markdown-body ol {
  margin: var(--editor-list-margin-vertical) 0;
  padding-left: 1.5em; /* refined from 1.4em for clearer indentation */
}

.markdown-body ul {
  list-style-type: disc;
}

.markdown-body ol {
  list-style-type: decimal;
}

.markdown-body li {
  margin: var(--editor-list-item-margin-vertical) 0;
  line-height: var(--editor-line-height-base);
  padding-left: 0.4em; /* refined from 0.3rem */
}

/* Nested lists with refined spacing */
.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ul,
.markdown-body ol ol {
  margin: 0.75em 0 0.75em 1.75em;
}

.markdown-body ul ul {
  list-style-type: circle;
}

.markdown-body ol ol {
  list-style-type: lower-alpha;
}

.markdown-body ol ol ol {
  list-style-type: lower-roman;
}

/* ==========================================================================
   LIENS
   ========================================================================== */

.markdown-body a {
  color: var(--accent-hover);
  text-decoration: none;
  filter: brightness(0.8);
  transition: color 0.18s, filter 0.18s;
}

.markdown-body a:hover {
  color: var(--accent-primary);
  filter: brightness(0.95);
  text-decoration: underline;
}

/* ==========================================================================
   CODE
   ========================================================================== */

.markdown-body code {
  background: var(--surface-2);
  color: var(--editor-text-color);
  border-radius: 4px;
  padding: 0.15em 0.4em; /* premium: refined padding */
  font-size: 0.85em;
  font-family: var(--font-monospace);
  font-weight: 500; /* premium: slightly bolder for better readability */
  letter-spacing: 0.01em; /* premium: subtle letter spacing */
  border: 1px solid var(--border-subtle); /* premium: subtle border */
}

.markdown-body pre {
  background: var(--surface-2);
  color: var(--editor-text-color);
  border-radius: 8px;
  padding: 1.2em 1.4em; /* premium: refined padding */
  font-size: 0.85em;
  font-family: 'JetBrains Mono', monospace;
  overflow-x: auto;
  margin: 1.4rem 0; /* premium: increased from 1.25rem for better block separation */
  border: 1px solid var(--border-subtle); /* premium: subtle border */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); /* premium: subtle shadow */
}

/* Code blocks and blockquotes spacing - premium unified */
.markdown-body pre,
.markdown-body blockquote,
.markdown-body table {
  margin: 1.4rem 0; /* premium: unified spacing for all blocks */
}

/* HR spacing */
.markdown-body hr {
  border: none;
  border-top: 1px solid var(--border-subtle);
  margin: 2em 0;
  width: 100%;
  max-width: none;
}

/* ==========================================================================
   TABLEAUX - STYLES MODERNES ET ÉPURÉS
   ========================================================================== */

.markdown-body .tableWrapper {
  border: 1px solid var(--border-subtle);
  border-radius: 10px;
  overflow: hidden;
  margin: var(--editor-list-margin-vertical) 0;
}

.markdown-body table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
  margin: 0;
}

.markdown-body th,
.markdown-body td {
  border: none;
  border-bottom: 1px solid var(--border-subtle);
  text-align: center; /* center cell content */
  vertical-align: middle;
  padding: 12px 16px;
  font-size: var(--ui-font-size-sm);
  color: var(--text-2);
  word-break: break-word;
  white-space: normal;
  box-sizing: border-box;
}

.markdown-body th {
  background: var(--surface-2);
  color: var(--text-1);
  font-weight: 600;
  font-size: var(--ui-font-size-xs);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  border-bottom: 2px solid var(--border-subtle);
}

.markdown-body tr:last-child td {
  border-bottom: none;
}

.markdown-body tbody tr:nth-child(even) td {
  background-color: var(--surface-2);
}

.markdown-body table p {
  margin: 0;
}

/* ==========================================================================
   BLOCKQUOTES
   ========================================================================== */

.markdown-body blockquote {
  border-left: 3px solid var(--accent-primary); /* Thinner border */
  background: var(--surface-2); /* Slightly different background */
  color: var(--text-2); /* Muted text color for hierarchy */
  font-style: normal;
  text-align: left;
  padding: 1em 1.5em; /* Refined padding */
  margin: var(--editor-list-margin-vertical) 0; /* Consistent vertical rhythm */
  border-radius: 0 8px 8px 0; /* Rounded corners on one side */
  border: none; /* Remove the old border */
  border-left: 3px solid var(--accent-primary); /* Re-apply the left border */
  box-shadow: none; /* Cleaner look */
}

.markdown-body blockquote::before {
  display: none;
}

.markdown-body blockquote p {
  margin-bottom: 1em; /* Spacing for paragraphs inside blockquote */
}

.markdown-body blockquote p:last-child {
  margin-bottom: 0; /* No margin for the last paragraph inside */
}

/* ==========================================================================
   RÈGLES HORIZONTALES (HR)
   ========================================================================== */
   
.markdown-body hr {
  border: none;
  border-top: 1px solid var(--border-subtle);
  margin: 2.5em 0; /* full-width separators */
  max-width: none;
  width: 100%;
}

/* ==========================================================================
   IMAGES
   ========================================================================== */

.markdown-body img {
  max-width: 100%;
  border-radius: 10px; /* premium: increased from 8px for softer look */
  margin: 1.4rem 0; /* premium: increased from 1.2rem for better separation */
  display: block;
  border: 1px solid var(--border-subtle); /* premium: subtle border */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* premium: subtle shadow */
  transition: transform 0.2s ease, box-shadow 0.2s ease; /* premium: smooth transitions */
}

.markdown-body img:hover {
  transform: translateY(-2px); /* premium: subtle lift effect */
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15); /* premium: enhanced shadow on hover */
}

/* ==========================================================================
   CHECKBOXES
   ========================================================================== */

.markdown-body input[type='checkbox'],
.editor-content input[type='checkbox'] {
  appearance: none;
  width: 1.2em;
  height: 1.2em;
  border: 2px solid var(--border-subtle);
  border-radius: 6px;
  background: var(--surface-1);
  display: inline-block;
  vertical-align: middle;
  position: relative;
  transition: border-color 0.18s, background 0.18s;
  cursor: pointer;
  margin-right: 0.8em;
  margin-top: 0;
}

.markdown-body input[type='checkbox']:checked,
.editor-content input[type='checkbox']:checked {
  border-color: var(--accent-primary);
  background: var(--accent-primary);
}

.markdown-body input[type='checkbox']:checked::after,
.editor-content input[type='checkbox']:checked::after {
  content: '✓' !important; /* ✅ VRAI CHECKMARK UNICODE */
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 1em !important; /* ✅ TAILLE ADAPTÉE */
  font-weight: bold !important;
  line-height: 1 !important;
  text-align: center !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.markdown-body input[type='checkbox']:focus,
.editor-content input[type='checkbox']:focus {
  outline: 2px solid var(--accent-primary);
  outline-offset: 1px;
}

/* ==========================================================================
   TASK LISTS (Tiptap/ProseMirror)
   ========================================================================== */

.task-list-item,
li[data-type="taskItem"] {
  display: flex;
  align-items: flex-start;
  gap: 0.6em;
  list-style-type: none; /* ❌ SUPPRIME LA BULLET */
}

.task-list-item label,
li[data-type="taskItem"] > label {
  display: flex;
  align-items: center; /* ✅ CENTRE VERTICALEMENT */
  width: 100%;
  gap: 0.6em;
}

.task-list-item .task-list-content,
li[data-type="taskItem"] .task-list-content {
  flex: 1 1 auto;
  min-width: 0;
  word-break: break-word;
  white-space: pre-line;
}

li[data-type="taskItem"] > label {
  margin-top: 0;
  flex-shrink: 0;
}

li[data-type="taskItem"] > div {
  flex: 1 1 auto;
  min-width: 0;
  word-break: break-word;
  white-space: pre-line;
  display: block;
}

li[data-type="taskItem"] > div p {
  margin: 0;
}

/* ==========================================================================
   SÉLECTION
   ========================================================================== */

.markdown-body ::selection {
  background: var(--accent-primary);
  color: white;
  text-shadow: none;
}

.markdown-body ::-moz-selection {
  background: var(--accent-primary);
  color: white;
  text-shadow: none;
}

/* Premium focus states */
.markdown-body *:focus {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
  border-radius: 4px;
}

/* Premium link focus */
.markdown-body a:focus {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
  border-radius: 4px;
  text-decoration: underline;
}

/* ==========================================================================
   CODE BLOCKS - MODERN TERMINAL STYLE
   ========================================================================== */

.markdown-body pre {
  position: relative; /* Anchor for the copy button */
  background: var(--surface-2);
  color: var(--text-2);
  border-radius: 10px;
  padding: 18px 20px; /* slightly larger padding for comfort */
  font-size: 0.95em; /* slightly larger for readability */
  font-family: var(--font-monospace);
  overflow-x: auto;
  margin: var(--editor-list-margin-vertical) 0;
  border: 1px solid var(--border-subtle);
  transition: background-color 0.2s;
}

/* Ensure code inside pre has no extra styling */
.markdown-body pre code {
  background: none;
  padding: 0;
  border: none;
  font-size: inherit;
  line-height: 1.6; /* Better line spacing for code */
  color: inherit;
}

.markdown-body code {
  background: var(--surface-2);
  color: var(--accent-primary);
  border-radius: 6px;
  padding: 0.2em 0.4em;
  font-size: 0.875em;
  font-family: var(--font-monospace);
  border: 1px solid var(--border-subtle);
}

/* Copy Button - fixed visible */
.code-copy-button {
  position: absolute;
  top: 10px;
  right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background: var(--surface-3);
  color: var(--text-2);
  border: 1px solid var(--border-subtle);
  border-radius: 6px;
  cursor: pointer;
  opacity: 1;
  transition: background-color 0.2s, color 0.2s, border-color 0.2s;
  z-index: 1;
}

/* hover-based visibility disabled: copy button is always visible */

.code-copy-button:hover {
  background: var(--surface-hover);
  border-color: var(--border-hover);
  color: var(--text-1);
}

.code-copy-button.copied {
  background: var(--success);
  border-color: var(--success);
  color: white;
}

.code-copy-button svg {
  width: 16px;
  height: 16px;
}

/* ==========================================================================
   IMAGES ET MARKS
   ========================================================================== */

.markdown-body img {
  max-width: 100%;
  border-radius: 10px; /* premium: increased from 8px for softer look */
  margin: 1.4rem 0; /* premium: increased from 1.2rem for better separation */
  display: block;
  border: 1px solid var(--border-subtle); /* premium: subtle border */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* premium: subtle shadow */
  transition: transform 0.2s ease, box-shadow 0.2s ease; /* premium: smooth transitions */
}

.markdown-body img:hover {
  transform: translateY(-2px); /* premium: subtle lift effect */
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15); /* premium: enhanced shadow on hover */
}

.markdown-body mark {
  background: var(--accent-subtle);
  color: var(--editor-text-color);
  padding: 0.1em 0.2em;
  border-radius: 3px;
}

/* ==========================================================================
   SÉPARATEUR
   ========================================================================== */

.markdown-body hr {
  border: none;
  border-top: 1px solid var(--border-subtle);
  margin: 2em 0;
  width: 100%;
  max-width: none;
}

/* ==========================================================================
   TABLEAUX
   ========================================================================== */

.markdown-body th {
  color: var(--editor-text-color);
  text-align: center;
  font-weight: 600;
  background: var(--surface-2);
}

/* ==========================================================================
   PROSEMIRROR TABLEAUX SPÉCIFIQUES
   ========================================================================== */

.ProseMirror .tableWrapper {
  margin: 1.5rem 0;
  border: 1px solid var(--border-subtle);
  border-radius: 10px;
  overflow: hidden;
  background: none;
}

.ProseMirror table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  background: none;
  border-radius: 10px;
  table-layout: fixed;
  margin: 0;
  padding: 0;
}

.ProseMirror table p {
  margin: 0;
}

.ProseMirror td,
.ProseMirror th {
  border: none;
  border-bottom: 1px solid var(--border-subtle);
  background: none;
  color: var(--text-2);
  font-size: var(--ui-font-size-sm);
  font-weight: 400;
  text-align: center; /* center cell content */
  vertical-align: middle;
  padding: 12px 16px;
  min-width: 100px; /* better resize baseline */
  max-width: none;
  word-break: break-word;
  white-space: normal;
  box-sizing: border-box;
}

.ProseMirror th {
  background: var(--surface-2);
  color: var(--text-1);
  font-weight: 600;
  font-size: var(--ui-font-size-xs);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  border-bottom: 2px solid var(--border-subtle);
}

/* remove vertical separators for a cleaner look */
/* .ProseMirror th:not(:last-child) { border-right: 1px solid var(--border-subtle); } */

.ProseMirror td {
  background: var(--surface-1);
}

/* Zebra striping */
.ProseMirror tbody tr:nth-child(even) td {
  background-color: var(--surface-2);
}

.ProseMirror tr:last-child td {
  border-bottom: none;
}

.ProseMirror .column-resize-handle {
  position: absolute;
  right: -2px;
  top: 0;
  bottom: 0;
  width: 4px;
  background-color: var(--accent-primary);
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
  z-index: 20;
}

.ProseMirror .tableWrapper:hover .column-resize-handle {
  opacity: 0.5;
}

.ProseMirror .column-resize-handle:hover,
.ProseMirror .column-resize-handle.dragging {
  opacity: 1;
}

.ProseMirror th:last-child,
.ProseMirror td:last-child {
  border-right: none;
}

.ProseMirror tbody tr:nth-child(odd) td {
  background: var(--surface-1);
}

.ProseMirror tbody tr:nth-child(even) td {
  background: var(--surface-2);
}

/* ==========================================================================
   BOUTON COPY CODE
   ========================================================================== */

.code-copy-button {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  border: 1px solid var(--border-subtle);
  border-radius: 4px;
  background: var(--surface-2);
  color: var(--text-2);
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 1;
  z-index: 10;
}

.code-copy-button:hover {
  background: var(--surface-3);
  border-color: var(--border-hover);
  color: var(--editor-text-color);
}

.code-copy-button.copied {
  background: var(--accent-primary);
  color: white;
  border-color: var(--accent-primary);
}

.code-copy-button.copied svg {
  animation: checkmark 0.3s ease;
}

@keyframes checkmark {
  0% { transform: scale(0); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

/* ==========================================================================
   PROSEMIRROR CODE SPÉCIFIQUE
   ========================================================================== */

.ProseMirror > pre.selected {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

.ProseMirror > pre:focus {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

.ProseMirror > *.selected {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

/* ==========================================================================
   PROSEMIRROR TASK LISTS
   ========================================================================== */

.ProseMirror li[data-type="taskItem"] {
  display: flex;
  align-items: center;
  gap: 0.4em;
  list-style-type: none;
  padding-left: 0;
}

.ProseMirror li[data-type="taskItem"] > label {
  display: inline-flex;
  align-items: center;
  gap: 0em;
  margin: 0;
  white-space: nowrap; /* prevent label wrapping under checkbox */
}

.ProseMirror li[data-type="taskItem"] > div {
  flex: 1 1 auto;
  min-width: 0;
  word-break: break-word;
  white-space: pre-line;
  display: block;
}

.ProseMirror li[data-type="taskItem"] > div p {
  margin: 0 !important;
}

/* ==========================================================================
   CHECKBOXES PROSEMIRROR
   ========================================================================== */

.ProseMirror input[type='checkbox'] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 1.7em;
  height: 1.7em;
  border: 2px solid var(--border-subtle);
  border-radius: 6px;
  background: var(--surface-1);
  display: inline-block;
  vertical-align: baseline;
  position: relative;
  transition: border-color 0.18s, background 0.18s;
  cursor: pointer;
  margin-left: -0.6em;
  margin-right: 0.5em;
  margin-top: 0;
}

.ProseMirror input[type='checkbox']:checked {
  background: var(--accent-primary);
  border-color: var(--accent-primary);
}

.ProseMirror input[type='checkbox']:checked::after {
  content: '✓';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 0.75em;
  font-weight: 700;
  line-height: 1;
}

.ProseMirror input[type='checkbox']:focus {
  outline: 2px solid var(--accent-subtle);
  outline-offset: 2px;
}

/* ==========================================================================
   TASK LISTS - STYLES ULTRA-AGRESSIFS
   ========================================================================== */

/* Supprime TOUS les bullets des listes task */
.ProseMirror ul li[data-type="taskItem"],
.ProseMirror ol li[data-type="taskItem"],
li[data-type="taskItem"],
.task-list-item {
  list-style: none !important;
  list-style-type: none !important;
  list-style-image: none !important;
  list-style-position: outside !important;
  padding-left: 0 !important;
  margin-left: 0 !important;
  text-indent: 0 !important;
}

/* Supprime les bullets de tous les éléments task dans ProseMirror */
.ProseMirror li[data-type="taskItem"]::before,
.ProseMirror li[data-type="taskItem"]::after,
li[data-type="taskItem"]::before,
li[data-type="taskItem"]::after {
  content: none !important;
  display: none !important;
}

/* Force la structure flex pour les task items */
.ProseMirror li[data-type="taskItem"],
li[data-type="taskItem"] {
  display: flex !important;
  align-items: flex-start !important;
  gap: 0.6em !important;
  flex-direction: row !important;
  width: 100% !important;
}

/* Styles pour les labels des task items */
.ProseMirror li[data-type="taskItem"] > label,
li[data-type="taskItem"] > label {
  display: flex !important;
  align-items: center !important;
  width: 100% !important;
  gap: 0.6em !important;
  margin: 0 !important;
  padding: 0 !important;
}

/* Styles pour le contenu des task items */
.ProseMirror li[data-type="taskItem"] > div,
li[data-type="taskItem"] > div {
  flex: 1 1 auto !important;
  min-width: 0 !important;
  word-break: break-word !important;
  white-space: pre-line !important;
  display: block !important;
  margin: 0 !important;
  padding: 0 !important;
}

.ProseMirror li[data-type="taskItem"] > div p,
li[data-type="taskItem"] > div p {
  margin: 0 !important;
  padding: 0 !important;
}

/* ==========================================================================
   CHECKBOXES - STYLES ULTRA-AGRESSIFS
   ========================================================================== */

/* Styles pour TOUS les checkbox dans ProseMirror */
.ProseMirror input[type='checkbox'],
.editor-content input[type='checkbox'],
.markdown-body input[type='checkbox'] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 1.7em;
  height: 1.7em;
  border: 2px solid var(--border-subtle);
  border-radius: 4px;
  background: var(--surface-1);
  display: inline-block;
  vertical-align: baseline;
  position: relative;
  transition: border-color 0.18s, background 0.18s;
  cursor: pointer;
  margin-left: -2.3em; /* pull into gutter */
  margin-right: 0.5em;
  margin-top: 0;
  flex-shrink: 0;
}

.ProseMirror input[type='checkbox']:checked,
.editor-content input[type='checkbox']:checked,
.markdown-body input[type='checkbox']:checked {
  background: var(--accent-primary) !important;
  border-color: var(--accent-primary) !important;
}

.ProseMirror input[type='checkbox']:checked::after,
.editor-content input[type='checkbox']:checked::after,
.markdown-body input[type='checkbox']:checked::after {
  content: '✓' !important; /* ✅ VRAI CHECKMARK UNICODE */
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 1em !important; /* ✅ TAILLE ADAPTÉE */
  font-weight: bold !important;
  line-height: 1 !important;
  text-align: center !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.ProseMirror input[type='checkbox']:focus,
.editor-content input[type='checkbox']:focus,
.markdown-body input[type='checkbox']:focus {
  outline: 2px solid var(--accent-subtle) !important;
  outline-offset: 2px !important;
}

/* ==========================================================================
   ESPACEMENTS SUPPLÉMENTAIRES
   ========================================================================== */

/* Espace sous les tableaux pour la lisibilité */
.markdown-body table {
  margin-bottom: 2.5em;
} 

/* ==========================================================================
   HEADINGS - PREMIUM TYPOGRAPHY (UNIFIED)
   ========================================================================== */

/* ==========================================================================
   TASK LISTS - COUVERTURE COMPLÈTE TIPTAP
   ========================================================================== */

/* Cible TOUS les éléments possibles de task lists */
.ProseMirror ul li[data-type="taskItem"],
.ProseMirror ol li[data-type="taskItem"],
.ProseMirror li[data-type="taskItem"],
.ProseMirror .task-list-item,
.ProseMirror ul .task-list-item,
.ProseMirror ol .task-list-item,
li[data-type="taskItem"],
.task-list-item,
ul li[data-type="taskItem"],
ol li[data-type="taskItem"],
ul .task-list-item,
ol .task-list-item {
  list-style: none !important;
  list-style-type: none !important;
  list-style-image: none !important;
  list-style-position: outside !important;
  padding-left: 0 !important;
  margin-left: 0 !important;
  text-indent: 0 !important;
  display: flex !important;
  align-items: flex-start !important;
  gap: 0.6em !important;
  flex-direction: row !important;
  width: 100% !important;
}

/* Supprime TOUS les pseudo-éléments */
.ProseMirror li[data-type="taskItem"]::before,
.ProseMirror li[data-type="taskItem"]::after,
.ProseMirror .task-list-item::before,
.ProseMirror .task-list-item::after,
li[data-type="taskItem"]::before,
li[data-type="taskItem"]::after,
.task-list-item::before,
.task-list-item::after,
ul li[data-type="taskItem"]::before,
ul li[data-type="taskItem"]::after,
ol li[data-type="taskItem"]::before,
ol li[data-type="taskItem"]::after {
  content: none !important;
  display: none !important;
  visibility: hidden !important;
}

/* Force la structure pour tous les labels */
.ProseMirror li[data-type="taskItem"] > label,
.ProseMirror .task-list-item > label,
li[data-type="taskItem"] > label,
.task-list-item > label {
  display: flex !important;
  align-items: center !important;
  width: 100% !important;
  gap: 0.6em !important;
  margin: 0 !important;
  padding: 0 !important;
}

/* Force la structure pour tous les contenus */
.ProseMirror li[data-type="taskItem"] > div,
.ProseMirror .task-list-item > div,
li[data-type="taskItem"] > div,
.task-list-item > div {
  flex: 1 1 auto !important;
  min-width: 0 !important;
  word-break: break-word !important;
  white-space: pre-line !important;
  display: block !important;
  margin: 0 !important;
  padding: 0 !important;
}

.ProseMirror li[data-type="taskItem"] > div p,
.ProseMirror .task-list-item > div p,
li[data-type="taskItem"] > div p,
.task-list-item > div p {
  margin: 0 !important;
  padding: 0 !important;
} 

/* ==========================================================================
   MARKDOWN TASK LISTS - SUPPRESSION BULLETS
   ========================================================================== */

/* Cible les listes markdown qui contiennent des checkbox (réduction agressivité) */
.markdown-body ul li:has(> input[type="checkbox"]),
.markdown-body ol li:has(> input[type="checkbox"]) {
  list-style: none;
}

/* Cible les éléments avec des checkbox dans le markdown */
.markdown-body li:has(input[type="checkbox"])::before,
.markdown-body li:has(input[type="checkbox"])::after {
  content: none;
}

/* Force la structure pour les éléments avec checkbox (réduction agressivité) */
.markdown-body li:has(input[type="checkbox"]) {
  display: flex;
  align-items: center;
  gap: 0.5em;
} 

/* ==========================================================================
   STYLE GLOBAL - SUPPRESSION BULLETS FORCÉE
   ========================================================================== */

/* Style global pour TOUS les éléments task (supprimé: trop agressif) */
/* Intentionnellement retiré pour ne pas casser l'indentation globale */

/* Supprime TOUS les pseudo-éléments de TOUS les éléments task (supprimé: trop agressif) */
/* Intentionnellement retiré pour ne pas impacter les autres listes */ 

/* ProseMirror code blocks - match modern style */
.ProseMirror pre {
  position: relative;
  background: var(--surface-2);
  color: var(--text-2);
  border-radius: 10px;
  padding: 18px 20px; /* match markdown look */
  font-size: 0.95em;
  font-family: var(--font-monospace);
  overflow-x: auto;
  margin: var(--editor-list-margin-vertical) 0;
  border: 1px solid var(--border-subtle);
  transition: background-color 0.2s;
}

.ProseMirror pre code {
  background: none;
  padding: 0;
  border: none;
  font-size: inherit;
  line-height: 1.6;
  color: inherit;
} 

/* Enhance ProseMirror table UX */
.ProseMirror .tableWrapper {
  overflow: auto; /* allow horizontal scroll if needed */
}

/* Make resize handle easier to target */
.ProseMirror .column-resize-handle {
  width: 6px; /* larger than default */
  background-color: var(--accent-primary);
  opacity: 0.2;
}

/* Clearer hover/drag states */
.ProseMirror .tableWrapper:hover .column-resize-handle {
  opacity: 0.45;
}
.ProseMirror .column-resize-handle:hover,
.ProseMirror .column-resize-handle.dragging {
  opacity: 0.9;
}

/* Provide extra padding at table edges to ease insert */
.ProseMirror table {
  margin: 0; /* keep flush */
}

/* Row/col controls from TableHeader/TableCell often rely on plugin UI, keep spacing safe */
.ProseMirror th,
.ProseMirror td {
  position: relative; /* anchor for potential UI */
} 

/* Clear selection highlight for table cells */
.ProseMirror .selectedCell {
  position: relative;
  background-color: rgba(var(--accent-primary-rgb, 41, 148, 255), 0.08);
  outline: 2px solid var(--accent-primary);
  outline-offset: -2px;
}

/* Make it obvious you can resize */
.ProseMirror .column-resize-handle {
  cursor: col-resize;
  user-select: none;
} 

/* Ensure container is anchor and keeps hover stable */
.markdown-body .code-block-container,
.ProseMirror .code-block-container {
  position: relative;
}

/* Keep copy button interactive without losing hover */
.code-copy-button {
  pointer-events: auto;
} 

/* Keep copy button visible on focus or copied state, and above content */
.code-copy-button:focus,
.code-copy-button.copied {
  opacity: 1;
  z-index: 5;
} 

/* (Removed duplicate markdown checkbox block to avoid conflicts; using unified block above) */

/* Align checkbox list items horizontally with the text */
.markdown-body li:has(> input[type="checkbox"]) {
  display: flex;
  align-items: baseline;
  gap: 0em;
  list-style: none;
  padding-left: 0; /* bring checkbox to the left edge */
  margin-left: 0;
} 

/* Keep task item content inline and aligned */
.ProseMirror li[data-type="taskItem"] > div,
.markdown-body li:has(> input[type="checkbox"]) > *:not(input) {
  display: inline;
}

/* Prevent block paragraphs from forcing wraps under checkbox in markdown */
.markdown-body li:has(> input[type="checkbox"]) p {
  display: inline;
  margin: 0;
} 

/* Checkbox layout: flex row, no absolute positioning (prevents drift) */
.markdown-body li:has(> input[type="checkbox"]) {
  display: flex;
  align-items: center;
  gap: 0.4em;
  list-style: none;
  padding-left: 0;
  margin-left: 0;
}

/* Keep content inline */
.markdown-body li:has(> input[type="checkbox"]) > *:not(input) {
  display: inline;
}

/* Normalize checkbox vertical alignment */
.ProseMirror li[data-type="taskItem"],
.markdown-body li:has(> input[type="checkbox"]) {
  align-items: center; /* ensure text and box are centered on the same line */
}

/* Center the checkmark inside the box and normalize inline alignment */
.ProseMirror input[type='checkbox'],
.editor-content input[type='checkbox'],
.markdown-body input[type='checkbox'] {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}

/* Tighten label/text line-height to reduce visual baseline drift */
.ProseMirror li[data-type="taskItem"] > label {
  line-height: 1.2;
}
