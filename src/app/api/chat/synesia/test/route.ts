import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const { message, messages } = await request.json();
    
    console.log("[Synesia Test API] üöÄ D√©but de la requ√™te de test");
    console.log("[Synesia Test API] üì¶ Body re√ßu:", { message, messages });

    // Simuler un d√©lai de r√©ponse
    await new Promise(resolve => setTimeout(resolve, 1000));

    // G√©n√©rer une r√©ponse simul√©e bas√©e sur le message
    let response = "";
    const lowerMessage = message.toLowerCase();
    
    // Salutations et conversations informelles
    if (lowerMessage.includes("bonjour") || lowerMessage.includes("hello") || lowerMessage.includes("salut") || lowerMessage.includes("slm")) {
      response = "Salut ! üëã Je suis l'assistant IA de Scrivia. Comment √ßa va ? Je suis l√† pour t'aider avec tes projets !";
    } 
    // Questions sur l'√©tat
    else if (lowerMessage.includes("√ßa va") || lowerMessage.includes("comment √ßa va") || lowerMessage.includes("comment allez-vous")) {
      response = "√áa va tr√®s bien, merci ! üòä Je suis pr√™t √† t'aider. Qu'est-ce que tu veux faire aujourd'hui ?";
    }
    // Demande d'aide
    else if (lowerMessage.includes("aide") || lowerMessage.includes("help") || lowerMessage.includes("aider")) {
      response = "Bien s√ªr ! Je peux t'aider avec plein de trucs cool :\n\n" +
        "üìù **√âcriture** : Articles, emails, rapports, tout √ßa\n" +
        "üìä **Analyse** : Analyser des textes, extraire des infos importantes\n" +
        "üìÅ **Organisation** : T'organiser, structurer tes id√©es\n" +
        "üîç **Recherche** : Trouver des infos sur des sujets\n" +
        "üí° **Brainstorming** : T'aider √† d√©velopper tes id√©es\n\n" +
        "Dis-moi ce qui t'int√©resse !";
    }
    // Merci
    else if (lowerMessage.includes("merci") || lowerMessage.includes("thanks")) {
      response = "De rien ! üòä Je suis l√† pour √ßa. N'h√©site pas si tu as d'autres questions !";
    }
    // Questions sur Scrivia
    else if (lowerMessage.includes("scrivia")) {
      response = "Scrivia c'est une plateforme g√©niale pour prendre des notes et s'organiser ! üöÄ\n\n" +
        "Voici ce que tu peux faire avec :\n\n" +
        "üìù **Prendre des notes** avec un √©diteur super riche\n" +
        "üìÅ **Organiser** tes docs en dossiers et classeurs\n" +
        "üîç **Rechercher** super vite dans tes contenus\n" +
        "ü§ù **Partager** tes notes avec d'autres\n" +
        "üí¨ **Discuter** avec moi (l'IA) pour am√©liorer tes contenus\n\n" +
        "C'est vraiment un outil puissant pour la productivit√© !";
    }
    // Questions sur l'IA
    else if (lowerMessage.includes("ia") || lowerMessage.includes("intelligence artificielle") || lowerMessage.includes("ai")) {
      response = "Oui, je suis une IA ! ü§ñ Je peux t'aider avec plein de choses :\n\n" +
        "üí¨ **Conversation** : On peut discuter de tout\n" +
        "‚úçÔ∏è **R√©daction** : T'aider √† √©crire des textes\n" +
        "üß† **R√©flexion** : T'aider √† organiser tes id√©es\n" +
        "üìö **Apprentissage** : T'expliquer des concepts\n" +
        "üéØ **Productivit√©** : T'aider √† √™tre plus efficace\n\n" +
        "Je suis l√† pour t'accompagner dans tes projets !";
    }
    // Questions sur les projets
    else if (lowerMessage.includes("projet") || lowerMessage.includes("travail") || lowerMessage.includes("boulot")) {
      response = "Super ! üéØ Parlons de tes projets. Je peux t'aider avec :\n\n" +
        "üìã **Planification** : Organiser tes t√¢ches et objectifs\n" +
        "üìù **Documentation** : R√©diger des documents professionnels\n" +
        "üí° **Id√©ation** : D√©velopper tes id√©es et concepts\n" +
        "üìä **Analyse** : Analyser des donn√©es ou des textes\n" +
        "üé® **Cr√©ativit√©** : T'aider √† √™tre plus cr√©atif\n\n" +
        "Raconte-moi ce sur quoi tu travailles !";
    }
    // R√©ponses g√©n√©riques mais plus personnalis√©es
    else {
      // Analyser le contexte de la conversation
      const messageCount = messages ? messages.length : 0;
      const isFirstMessage = messageCount === 0;
      
      if (isFirstMessage) {
        response = `Salut ! üëã Merci pour ton message : "${message}"\n\n` +
          "Je suis l'assistant IA de Scrivia et je suis l√† pour t'aider ! Je peux t'assister dans plein de domaines : r√©daction, analyse, organisation, recherche, et bien plus encore.\n\n" +
          "N'h√©site pas √† me poser des questions sp√©cifiques ou √† me demander de l'aide pour tes projets !";
      } else {
        response = `Int√©ressant ! ü§î "${message}"\n\n` +
          "Je suis l√† pour t'aider. Tu peux me demander de l'aide pour :\n\n" +
          "üìù **√âcrire** quelque chose\n" +
          "üîç **Rechercher** des informations\n" +
          "üìä **Analyser** des donn√©es\n" +
          "üí° **D√©velopper** tes id√©es\n" +
          "üìã **Organiser** tes projets\n\n" +
          "Dis-moi ce que tu veux faire !";
      }
    }

    // Ajouter des informations sur l'historique si disponible
    if (messages && messages.length > 0) {
      response += `\n\n*Note : Cette conversation contient ${messages.length} message(s) dans l'historique.*`;
    }

    console.log("[Synesia Test API] ‚úÖ R√©ponse simul√©e g√©n√©r√©e");
    
    return NextResponse.json({ 
      success: true,
      response: response,
      test_mode: true,
      message_count: messages ? messages.length : 0
    });

  } catch (error) {
    console.error("[Synesia Test API] ‚ùå Erreur:", error);
    return NextResponse.json(
      { 
        success: false,
        error: error instanceof Error ? error.message : "Erreur inconnue",
        test_mode: true
      },
      { status: 500 }
    );
  }
} 