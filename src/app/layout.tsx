import type { Metadata } from "next";
// import type { ReactNode } from "react";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
// import Sidebar from '../components/Sidebar';
import Header from '../components/Header';
import '../styles/design-system.css';
import '../styles/editor.css';
import '../components/editor/editor-header.css';
import { AuthProvider } from '../components/AuthProvider';
import { LanguageProvider } from '../contexts/LanguageContext';
import { Toaster } from 'react-hot-toast';
import AppMainContent from '../components/AppMainContent';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function isPublicSharePath() {
  if (typeof window === 'undefined') return false;
  const pathname = window.location.pathname;
  // Match /[username]/shared/[slug]
  return /^\/[^/]+\/shared\/[^/]+$/.test(pathname);
}

export default function RootLayout({ children }: Readonly<{ children: React.ReactNode }>) {
  const publicShare = typeof window !== 'undefined' && isPublicSharePath();
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <LanguageProvider>
          {publicShare ? (
            <>
              <Toaster position="top-right" />
              <div className="app-layout">
                <AppMainContent>{children}</AppMainContent>
              </div>
            </>
          ) : (
            <AuthProvider>
              <Toaster position="top-right" />
              <div className="app-layout">
                <AppMainContent>{children}</AppMainContent>
              </div>
            </AuthProvider>
          )}
        </LanguageProvider>
      </body>
    </html>
  );
}
