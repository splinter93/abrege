{
  "openapi": "3.1.0",
  "info": {
    "title": "Scrivia API v2 - LLM Tools",
    "description": "API Scrivia v2 pour l'intégration LLM avec support complet des notes, dossiers et classeurs. Tous les endpoints supportent les slugs et UUIDs.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://scrivia.app",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Note": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "source_title": { "type": "string", "maxLength": 255 },
          "markdown_content": { "type": "string" },
          "html_content": { "type": "string" },
          "header_image": { "type": "string", "format": "uri" },
          "folder_id": { "type": "string", "format": "uuid" },
          "classeur_id": { "type": "string", "format": "uuid" },
          "user_id": { "type": "string", "format": "uuid" },
          "slug": { "type": "string" },
          "description": { "type": "string", "maxLength": 500 },
          "visibility": { "type": "string", "enum": ["private", "shared", "members", "public"] },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "source_title", "user_id", "created_at", "updated_at"]
      },
      "CreateNotePayload": {
        "type": "object",
        "properties": {
          "source_title": { "type": "string", "minLength": 1, "maxLength": 255 },
          "notebook_id": { "type": "string", "description": "ID ou slug du classeur" },
          "markdown_content": { "type": "string" },
          "header_image": { "type": "string", "format": "uri" },
          "folder_id": { "type": "string", "format": "uuid" }
        },
        "required": ["source_title", "notebook_id"]
      },
      "UpdateNotePayload": {
        "type": "object",
        "properties": {
          "source_title": { "type": "string", "minLength": 1, "maxLength": 255 },
          "markdown_content": { "type": "string" },
          "html_content": { "type": "string" },
          "header_image": { "type": "string", "format": "uri" },
          "folder_id": { "type": "string", "format": "uuid" },
          "description": { "type": "string", "maxLength": 500 }
        }
      },
      "MoveNotePayload": {
        "type": "object",
        "properties": {
          "folder_id": { "type": "string", "format": "uuid", "nullable": true }
        }
      },
      "AddContentPayload": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "minLength": 1 }
        },
        "required": ["content"]
      },
      "InsertContentPayload": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "minLength": 1 },
          "position": { "type": "integer", "minimum": 0 }
        },
        "required": ["content", "position"]
      },
      "MergeNotePayload": {
        "type": "object",
        "properties": {
          "targetNoteId": { "type": "string", "format": "uuid" },
          "mergeStrategy": { "type": "string", "enum": ["append", "prepend", "replace"] }
        },
        "required": ["targetNoteId", "mergeStrategy"]
      },
      "PublishNotePayload": {
        "type": "object",
        "properties": {
          "visibility": { "type": "string", "enum": ["private", "shared", "members", "public"] }
        }
      },
      "Folder": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string", "maxLength": 255 },
          "parent_id": { "type": "string", "format": "uuid", "nullable": true },
          "classeur_id": { "type": "string", "format": "uuid" },
          "user_id": { "type": "string", "format": "uuid" },
          "slug": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "classeur_id", "user_id", "created_at", "updated_at"]
      },
      "CreateFolderPayload": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1, "maxLength": 255 },
          "notebook_id": { "type": "string", "description": "ID ou slug du classeur" },
          "parent_id": { "type": "string", "format": "uuid", "nullable": true }
        },
        "required": ["name", "notebook_id"]
      },
      "UpdateFolderPayload": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1, "maxLength": 255 },
          "parent_id": { "type": "string", "format": "uuid", "nullable": true }
        }
      },
      "MoveFolderPayload": {
        "type": "object",
        "properties": {
          "target_classeur_id": { "type": "string", "format": "uuid" },
          "target_parent_id": { "type": "string", "format": "uuid", "nullable": true }
        }
      },
      "Classeur": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "name": { "type": "string", "maxLength": 255 },
          "emoji": { "type": "string" },
          "color": { "type": "string" },
          "user_id": { "type": "string", "format": "uuid" },
          "slug": { "type": "string" },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "user_id", "created_at", "updated_at"]
      },
      "CreateClasseurPayload": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1, "maxLength": 255 },
          "emoji": { "type": "string" },
          "color": { "type": "string" }
        },
        "required": ["name"]
      },
      "UpdateClasseurPayload": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "minLength": 1, "maxLength": 255 },
          "emoji": { "type": "string" },
          "color": { "type": "string" }
        }
      },
      "ReorderClasseurPayload": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string", "format": "uuid" },
                "type": { "type": "string", "enum": ["note", "folder"] },
                "position": { "type": "integer", "minimum": 0 }
              },
              "required": ["id", "type", "position"]
            }
          }
        },
        "required": ["items"]
      },
      "GenerateSlugPayload": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "minLength": 1, "maxLength": 255 }
        },
        "required": ["title"]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" },
          "data": { "type": "object" }
        },
        "required": ["success"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "details": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "integer" }
        },
        "required": ["error"]
      }
    }
  },
  "paths": {
    "/api/v2/note/create": {
      "post": {
        "operationId": "createNote",
        "summary": "Créer une nouvelle note",
        "description": "Créer une nouvelle note structurée dans un classeur spécifique (par ID ou slug), avec un titre obligatoire, un contenu markdown optionnel, et un dossier parent facultatif.",
        "tags": ["Notes"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateNotePayload" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note créée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/SuccessResponse" },
                    { "properties": { "data": { "$ref": "#/components/schemas/Note" } } }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "401": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}": {
      "get": {
        "operationId": "getNote",
        "summary": "Récupérer une note",
        "description": "Récupérer une note par son ID ou slug",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Note récupérée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/update": {
      "put": {
        "operationId": "updateNote",
        "summary": "Mettre à jour une note",
        "description": "Modifier une note existante identifiée par son ID ou slug, pour changer son titre, contenu markdown, description ou dossier parent (sans écraser les autres champs non spécifiés).",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateNotePayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note mise à jour avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/delete": {
      "delete": {
        "operationId": "deleteNote",
        "summary": "Supprimer une note",
        "description": "Supprimer définitivement une note et tout son contenu de la base de données. Cette action est irréversible et ne peut pas être annulée.",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Note supprimée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/content": {
      "get": {
        "operationId": "getNoteContent",
        "summary": "Récupérer le contenu d'une note",
        "description": "Récupérer le contenu markdown et HTML d'une note",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Contenu récupéré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markdown_content": { "type": "string" },
                    "html_content": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/metadata": {
      "get": {
        "operationId": "getNoteMetadata",
        "summary": "Récupérer les métadonnées d'une note",
        "description": "Récupérer les informations de base d'une note (titre, dates, etc.)",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Métadonnées récupérées avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/add-content": {
      "post": {
        "operationId": "addContentToNote",
        "summary": "Ajouter du contenu à une note",
        "description": "Ajouter du contenu markdown à la fin d'une note existante",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddContentPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contenu ajouté avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/insert": {
      "post": {
        "operationId": "insertContentToNote",
        "summary": "Insérer du contenu à une position spécifique",
        "description": "Insérer du contenu markdown à une position spécifique dans la note",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InsertContentPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contenu inséré avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/move": {
      "put": {
        "operationId": "moveNote",
        "summary": "Déplacer une note",
        "description": "Déplacer une note vers un autre dossier ou classeur",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MoveNotePayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note déplacée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/merge": {
      "post": {
        "operationId": "mergeNote",
        "summary": "Fusionner des notes",
        "description": "Fusionner le contenu d'une note avec une autre note selon une stratégie spécifique",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note source"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MergeNotePayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notes fusionnées avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/publish": {
      "post": {
        "operationId": "publishNote",
        "summary": "Publier une note",
        "description": "Changer le statut de publication d'une note",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PublishNotePayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note publiée avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/insights": {
      "get": {
        "operationId": "getNoteInsights",
        "summary": "Récupérer les insights d'une note",
        "description": "Récupérer les analyses et insights générés automatiquement pour une note",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Insights récupérés avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insights": { "type": "array", "items": { "type": "string" } }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/statistics": {
      "get": {
        "operationId": "getNoteStatistics",
        "summary": "Récupérer les statistiques d'une note",
        "description": "Récupérer les statistiques détaillées d'une note (nombre de mots, temps de lecture, etc.)",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques récupérées avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "word_count": { "type": "integer" },
                    "character_count": { "type": "integer" },
                    "line_count": { "type": "integer" }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/note/{ref}/table-of-contents": {
      "get": {
        "operationId": "getNoteTableOfContents",
        "summary": "Récupérer la table des matières",
        "description": "Récupérer la table des matières générée automatiquement d'une note",
        "tags": ["Notes"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug de la note"
          }
        ],
        "responses": {
          "200": {
            "description": "Table des matières récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "toc": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/create": {
      "post": {
        "operationId": "createFolder",
        "summary": "Créer un nouveau dossier",
        "description": "Créer un nouveau dossier dans un classeur spécifique (par ID ou slug)",
        "tags": ["Dossiers"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateFolderPayload" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dossier créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/SuccessResponse" },
                    { "properties": { "data": { "$ref": "#/components/schemas/Folder" } } }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "401": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/{ref}": {
      "get": {
        "operationId": "getFolder",
        "summary": "Récupérer un dossier",
        "description": "Récupérer un dossier par son ID ou slug",
        "tags": ["Dossiers"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du dossier"
          }
        ],
        "responses": {
          "200": {
            "description": "Dossier récupéré avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Folder" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/{ref}/update": {
      "put": {
        "operationId": "updateFolder",
        "summary": "Mettre à jour un dossier",
        "description": "Modifier les propriétés d'un dossier existant",
        "tags": ["Dossiers"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du dossier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateFolderPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dossier mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Folder" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/{ref}/delete": {
      "delete": {
        "operationId": "deleteFolder",
        "summary": "Supprimer un dossier",
        "description": "Supprimer définitivement un dossier et tout son contenu",
        "tags": ["Dossiers"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du dossier"
          }
        ],
        "responses": {
          "200": {
            "description": "Dossier supprimé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/{ref}/move": {
      "put": {
        "operationId": "moveFolder",
        "summary": "Déplacer un dossier",
        "description": "Déplacer un dossier vers un autre classeur",
        "tags": ["Dossiers"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du dossier"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MoveFolderPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dossier déplacé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Folder" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/folder/{ref}/tree": {
      "get": {
        "operationId": "getFolderTree",
        "summary": "Récupérer l'arborescence d'un dossier",
        "description": "Récupérer la structure complète d'un dossier avec ses sous-dossiers et notes",
        "tags": ["Dossiers"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du dossier"
          }
        ],
        "responses": {
          "200": {
            "description": "Arborescence récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folder": { "$ref": "#/components/schemas/Folder" },
                    "children": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/create": {
      "post": {
        "operationId": "createClasseur",
        "summary": "Créer un nouveau classeur",
        "description": "Créer un nouveau classeur avec un nom obligatoire et des métadonnées optionnelles",
        "tags": ["Classeurs"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateClasseurPayload" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Classeur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/SuccessResponse" },
                    { "properties": { "data": { "$ref": "#/components/schemas/Classeur" } } }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "401": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/{ref}": {
      "get": {
        "operationId": "getClasseur",
        "summary": "Récupérer un classeur",
        "description": "Récupérer un classeur par son ID ou slug",
        "tags": ["Classeurs"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du classeur"
          }
        ],
        "responses": {
          "200": {
            "description": "Classeur récupéré avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Classeur" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/{ref}/update": {
      "put": {
        "operationId": "updateClasseur",
        "summary": "Mettre à jour un classeur",
        "description": "Modifier les propriétés d'un classeur existant",
        "tags": ["Classeurs"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du classeur"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateClasseurPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classeur mis à jour avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Classeur" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/{ref}/delete": {
      "delete": {
        "operationId": "deleteClasseur",
        "summary": "Supprimer un classeur",
        "description": "Supprimer définitivement un classeur et tout son contenu",
        "tags": ["Classeurs"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du classeur"
          }
        ],
        "responses": {
          "200": {
            "description": "Classeur supprimé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/{ref}/tree": {
      "get": {
        "operationId": "getClasseurTree",
        "summary": "Récupérer l'arborescence d'un classeur",
        "description": "Récupérer la structure complète d'un classeur avec ses dossiers et notes",
        "tags": ["Classeurs"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du classeur"
          }
        ],
        "responses": {
          "200": {
            "description": "Arborescence récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "classeur": { "$ref": "#/components/schemas/Classeur" },
                    "tree": { "type": "object" }
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeur/{ref}/reorder": {
      "put": {
        "operationId": "reorderClasseur",
        "summary": "Réorganiser un classeur",
        "description": "Réorganiser l'ordre des éléments dans un classeur",
        "tags": ["Classeurs"],
        "parameters": [
          {
            "name": "ref",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID ou slug du classeur"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReorderClasseurPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classeur réorganisé avec succès",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SuccessResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" },
          "404": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/classeurs": {
      "get": {
        "operationId": "getClasseurs",
        "summary": "Lister tous les classeurs",
        "description": "Récupérer la liste de tous les classeurs de l'utilisateur",
        "tags": ["Classeurs"],
        "responses": {
          "200": {
            "description": "Liste des classeurs récupérée avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "classeurs": { "type": "array", "items": { "$ref": "#/components/schemas/Classeur" } }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    },
    "/api/v2/slug/generate": {
      "post": {
        "operationId": "generateSlug",
        "summary": "Générer un slug",
        "description": "Générer un slug unique pour un titre donné",
        "tags": ["Utilitaires"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GenerateSlugPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Slug généré avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "slug": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/schemas/ErrorResponse" }
        }
      }
    }
  }
} 