require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function disableRLSViaAPI() {
  try {
    console.log('üîß Tentative de d√©sactivation de RLS via API...');
    
    // Essayer de d√©sactiver RLS via une requ√™te SQL directe
    const { data, error } = await supabase
      .from('articles')
      .select('*')
      .limit(1);
    
    if (error) {
      console.log('‚ö†Ô∏è Erreur lors de l\'acc√®s √† articles:', error.message);
      
      // Si c'est une erreur RLS, on peut essayer de contourner
      if (error.message.includes('RLS') || error.message.includes('policy')) {
        console.log('üîç Probl√®me RLS d√©tect√© - Tentative de contournement...');
        
        // Essayer d'utiliser une requ√™te SQL brute
        const { data: sqlData, error: sqlError } = await supabase
          .rpc('sql', { query: 'ALTER TABLE public.articles DISABLE ROW LEVEL SECURITY;' });
        
        if (sqlError) {
          console.log('‚ö†Ô∏è Erreur SQL:', sqlError.message);
        } else {
          console.log('‚úÖ RLS d√©sactiv√© via SQL');
        }
      }
    } else {
      console.log('‚úÖ Acc√®s aux articles OK');
    }
    
    // Tester l'acc√®s aux autres tables
    const { data: foldersData, error: foldersError } = await supabase
      .from('folders')
      .select('*')
      .limit(1);
    
    if (foldersError) {
      console.log('‚ö†Ô∏è Erreur lors de l\'acc√®s √† folders:', foldersError.message);
    } else {
      console.log('‚úÖ Acc√®s aux folders OK');
    }
    
    const { data: classeursData, error: classeursError } = await supabase
      .from('classeurs')
      .select('*')
      .limit(1);
    
    if (classeursError) {
      console.log('‚ö†Ô∏è Erreur lors de l\'acc√®s √† classeurs:', classeursError.message);
    } else {
      console.log('‚úÖ Acc√®s aux classeurs OK');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  }
}

disableRLSViaAPI(); 